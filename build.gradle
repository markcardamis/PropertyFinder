plugins {
	id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

group = 'com.majoapps'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	jcenter()
	google()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.okta.spring:okta-spring-boot-starter:1.2.1'
	implementation 'com.google.code.gson:gson:2.8.5'
	implementation 'org.jsoup:jsoup:1.12.1'
	implementation 'com.sendgrid:sendgrid-java:4.4.1'
	implementation 'com.google.firebase:firebase-admin:6.9.0'
	implementation 'org.apache.logging.log4j:log4j-api:2.12.0'
	implementation 'org.apache.logging.log4j:log4j-core:2.12.0'
	implementation 'org.apache.commons:commons-lang3:3.8'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.12'
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean